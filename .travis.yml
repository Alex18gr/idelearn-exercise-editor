os: linux
services: docker
language: generic

cache:
  directories:
    - node_modules
    - app/node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder
    - $HOME/.npm/_prebuilds

env:
  global:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      >.env
      for var in $(compgen -v | grep -iE 'GH_TOKEN|DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_'); do
          var_fixed=$(printf "%s" "${!var}" | tr -d '\n' )
          echo "$var=${var_fixed}" >>.env
      done
      docker run --rm \
        --env-file .env \
        -v ${PWD}:/project \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        electronuserland/builder:wine \
        /bin/bash -c "npm install && npm run build:electron && npm run prepackage && npm run publish -- --linux --win"
    else
      yarn release
    fi
before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

branches:
  except:
    - "/^v\\d+\\.\\d+\\.\\d+$/"

# jobs:
#   include:
#     - stage: Test
#       script: 
#         - npm test
#     - stage: Deploy Windows & Mac
#       os: osx
#       osx_image: xcode12.2
#       script:
#         - npm run release -- --mac --win
#       before_cache:
#         - rm -rf $HOME/.cache/electron-builder/wine
#     - stage: Deploy linux
#       os: linux
#       dist: trusty
#       script:
#         - npm run release
